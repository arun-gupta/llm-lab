{
  "info": {
    "name": "Ultra-Fast MCP Test",
    "description": "CLI-like performance with minimal session management - static request bodies, minimal scripts",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "github_token",
      "value": "your_github_personal_access_token_here",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Initialize MCP Session",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/vnd.github.v3+json"
          },
          {
            "key": "X-MCP-Version",
            "value": "1.0"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{github_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"initialize\",\n  \"params\": {\n    \"protocolVersion\": \"2024-11-05\",\n    \"capabilities\": {\n      \"tools\": {}\n    },\n    \"clientInfo\": {\n      \"name\": \"ultra-fast-mcp\",\n      \"version\": \"1.0.0\"\n    }\n  },\n  \"id\": 1\n}"
        },
        "url": {
          "raw": "https://api.githubcopilot.com/mcp/",
          "host": ["api.githubcopilot.com"],
          "path": ["mcp"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Store session ID from response headers",
              "if (pm.response.code === 200) {",
              "  const sessionId = pm.response.headers.get('mcp-session-id');",
              "  if (sessionId) {",
              "    pm.environment.set('mcp_session_id', sessionId);",
              "    console.log('✅ MCP session initialized:', sessionId);",
              "  } else {",
              "    console.log('⚠️ No session ID in response headers');",
              "  }",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "GitHub MCP - Search 3 Repos (Static)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/vnd.github.v3+json"
          },
          {
            "key": "X-MCP-Version",
            "value": "1.0"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{github_token}}"
          },
          {
            "key": "Mcp-Session-Id",
            "value": "{{mcp_session_id}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"search_repositories\",\n    \"arguments\": {\n      \"query\": \"user:arun-gupta\",\n      \"perPage\": 3\n    }\n  },\n  \"id\": 1,\n  \"apiVersion\": \"2022-11-28\"\n}"
        },
        "url": {
          "raw": "https://api.githubcopilot.com/mcp/",
          "host": ["api.githubcopilot.com"],
          "path": ["mcp"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Simple response validation",
              "if (pm.response.code === 200) {",
              "  const response = pm.response.json();",
              "  if (response.jsonrpc === '2.0' && response.result) {",
              "    console.log('✅ Repository search successful!');",
              "    console.log('Response time:', pm.response.responseTime + 'ms');",
              "    ",
              "    // Parse and display repository data",
              "    if (response.result.content && response.result.content.length > 0) {",
              "      try {",
              "        const contentText = response.result.content[0].text;",
              "        const reposData = JSON.parse(contentText);",
              "        console.log('📊 Repositories found:', reposData.total_count || 0);",
              "        console.log('📋 Items returned:', reposData.items ? reposData.items.length : 0);",
              "      } catch (e) {",
              "        console.log('📄 Raw response received');",
              "      }",
              "    }",
              "  }",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "GitHub MCP - Search 5 Repos (Static)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/vnd.github.v3+json"
          },
          {
            "key": "X-MCP-Version",
            "value": "1.0"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{github_token}}"
          },
          {
            "key": "Mcp-Session-Id",
            "value": "{{mcp_session_id}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"search_repositories\",\n    \"arguments\": {\n      \"query\": \"user:arun-gupta\",\n      \"perPage\": 5\n    }\n  },\n  \"id\": 1,\n  \"apiVersion\": \"2022-11-28\"\n}"
        },
        "url": {
          "raw": "https://api.githubcopilot.com/mcp/",
          "host": ["api.githubcopilot.com"],
          "path": ["mcp"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Simple response validation",
              "if (pm.response.code === 200) {",
              "  const response = pm.response.json();",
              "  if (response.jsonrpc === '2.0' && response.result) {",
              "    console.log('✅ Repository search successful!');",
              "    console.log('Response time:', pm.response.responseTime + 'ms');",
              "    ",
              "    // Parse and display repository data",
              "    if (response.result.content && response.result.content.length > 0) {",
              "      try {",
              "        const contentText = response.result.content[0].text;",
              "        const reposData = JSON.parse(contentText);",
              "        console.log('📊 Repositories found:', reposData.total_count || 0);",
              "        console.log('📋 Items returned:', reposData.items ? reposData.items.length : 0);",
              "      } catch (e) {",
              "        console.log('📄 Raw response received');",
              "      }",
              "    }",
              "  }",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "GitHub MCP - Search 10 Repos (Static)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/vnd.github.v3+json"
          },
          {
            "key": "X-MCP-Version",
            "value": "1.0"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{github_token}}"
          },
          {
            "key": "Mcp-Session-Id",
            "value": "{{mcp_session_id}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"search_repositories\",\n    \"arguments\": {\n      \"query\": \"user:arun-gupta\",\n      \"perPage\": 10\n    }\n  },\n  \"id\": 1,\n  \"apiVersion\": \"2022-11-28\"\n}"
        },
        "url": {
          "raw": "https://api.githubcopilot.com/mcp/",
          "host": ["api.githubcopilot.com"],
          "path": ["mcp"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Simple response validation",
              "if (pm.response.code === 200) {",
              "  const response = pm.response.json();",
              "  if (response.jsonrpc === '2.0' && response.result) {",
              "    console.log('✅ Repository search successful!');",
              "    console.log('Response time:', pm.response.responseTime + 'ms');",
              "    ",
              "    // Parse and display repository data",
              "    if (response.result.content && response.result.content.length > 0) {",
              "      try {",
              "        const contentText = response.result.content[0].text;",
              "        const reposData = JSON.parse(contentText);",
              "        console.log('📊 Repositories found:', reposData.total_count || 0);",
              "        console.log('📋 Items returned:', reposData.items ? reposData.items.length : 0);",
              "      } catch (e) {",
              "        console.log('📄 Raw response received');",
              "      }",
              "    }",
              "  }",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "GitHub MCP - Get User Info (Static)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/vnd.github.v3+json"
          },
          {
            "key": "X-MCP-Version",
            "value": "1.0"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{github_token}}"
          },
          {
            "key": "Mcp-Session-Id",
            "value": "{{mcp_session_id}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"get_me\",\n    \"arguments\": {}\n  },\n  \"id\": 1,\n  \"apiVersion\": \"2022-11-28\"\n}"
        },
        "url": {
          "raw": "https://api.githubcopilot.com/mcp/",
          "host": ["api.githubcopilot.com"],
          "path": ["mcp"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Simple response validation",
              "if (pm.response.code === 200) {",
              "  const response = pm.response.json();",
              "  if (response.jsonrpc === '2.0' && response.result) {",
              "    console.log('✅ User info retrieved successfully!');",
              "    console.log('Response time:', pm.response.responseTime + 'ms');",
              "    ",
              "    // Parse and display user data",
              "    if (response.result.content && response.result.content.length > 0) {",
              "      try {",
              "        const contentText = response.result.content[0].text;",
              "        const userData = JSON.parse(contentText);",
              "        console.log('👤 User:', userData.login || 'unknown');",
              "        console.log('📧 Email:', userData.email || 'not provided');",
              "      } catch (e) {",
              "        console.log('📄 Raw response received');",
              "      }",
              "    }",
              "  }",
              "}"
            ]
          }
        }
      ]
    }
  ]
}
