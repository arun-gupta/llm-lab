{
  "info": {
    "name": "Ultra-Fast GitHub Direct API",
    "description": "Direct GitHub API calls - bypasses MCP protocol completely for maximum speed. No session initialization, no streaming responses, just fast direct API calls.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "github_token",
      "value": "{{$randomUUID}}",
      "type": "string"
    },
    {
      "key": "github_repos_count",
      "value": "3",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Get User Info (Direct)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{github_token}}",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/vnd.github.v3+json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://api.github.com/user",
          "protocol": "https",
          "host": ["api", "github", "com"],
          "path": ["user"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has user data\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('login');",
              "    pm.expect(jsonData).to.have.property('id');",
              "    console.log('User:', jsonData.login, 'ID:', jsonData.id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Search Repos (3) - Direct",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{github_token}}",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/vnd.github.v3+json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://api.github.com/search/repositories?q=stars:>1000&sort=stars&order=desc&per_page=3",
          "protocol": "https",
          "host": ["api", "github", "com"],
          "path": ["search", "repositories"],
          "query": [
            {
              "key": "q",
              "value": "stars:>1000"
            },
            {
              "key": "sort",
              "value": "stars"
            },
            {
              "key": "order",
              "value": "desc"
            },
            {
              "key": "per_page",
              "value": "3"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has repositories\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('total_count');",
              "    pm.expect(jsonData).to.have.property('items');",
              "    pm.expect(jsonData.items).to.be.an('array');",
              "    console.log('Found', jsonData.total_count, 'repositories');",
              "    console.log('Showing', jsonData.items.length, 'repositories');",
              "    jsonData.items.forEach((repo, index) => {",
              "        console.log(`${index + 1}. ${repo.full_name} (${repo.stargazers_count} stars)`);",
              "    });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Search Repos (5) - Direct",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{github_token}}",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/vnd.github.v3+json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://api.github.com/search/repositories?q=language:javascript&sort=updated&order=desc&per_page=5",
          "protocol": "https",
          "host": ["api", "github", "com"],
          "path": ["search", "repositories"],
          "query": [
            {
              "key": "q",
              "value": "language:javascript"
            },
            {
              "key": "sort",
              "value": "updated"
            },
            {
              "key": "order",
              "value": "desc"
            },
            {
              "key": "per_page",
              "value": "5"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has repositories\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('total_count');",
              "    pm.expect(jsonData).to.have.property('items');",
              "    pm.expect(jsonData.items).to.be.an('array');",
              "    console.log('Found', jsonData.total_count, 'JavaScript repositories');",
              "    console.log('Showing', jsonData.items.length, 'repositories');",
              "    jsonData.items.forEach((repo, index) => {",
              "        console.log(`${index + 1}. ${repo.full_name} (${repo.language})`);",
              "    });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Search Repos (10) - Direct",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{github_token}}",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/vnd.github.v3+json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://api.github.com/search/repositories?q=created:>2024-01-01&sort=forks&order=desc&per_page=10",
          "protocol": "https",
          "host": ["api", "github", "com"],
          "path": ["search", "repositories"],
          "query": [
            {
              "key": "q",
              "value": "created:>2024-01-01"
            },
            {
              "key": "sort",
              "value": "forks"
            },
            {
              "key": "order",
              "value": "desc"
            },
            {
              "key": "per_page",
              "value": "10"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has repositories\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('total_count');",
              "    pm.expect(jsonData).to.have.property('items');",
              "    pm.expect(jsonData.items).to.be.an('array');",
              "    console.log('Found', jsonData.total_count, 'recent repositories');",
              "    console.log('Showing', jsonData.items.length, 'repositories');",
              "    jsonData.items.forEach((repo, index) => {",
              "        console.log(`${index + 1}. ${repo.full_name} (${repo.forks_count} forks)`);",
              "    });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
